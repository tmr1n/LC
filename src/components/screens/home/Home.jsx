import cn from 'clsx'
import { useEffect, useState } from 'react'
import { useOutletContext } from 'react-router-dom'

import styles from './home.module.scss'

const Home = () => {
	const { openRegistration } = useOutletContext()
	const [loading, setLoading] = useState(true)

	// –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
	useEffect(() => {
		const timer = setTimeout(() => setLoading(false), 2000)
		return () => clearTimeout(timer)
	}, [])

	return (
		<div className={styles.homeWrapper}>
			{/* –¢–≤–æ—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è hero —Å–µ–∫—Ü–∏—è */}
			<section className={styles.home}>
				{loading ? (
					<HeroSkeleton />
				) : (
					<>
						<h1 className={styles.title}>–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è?</h1>
						<p className={styles.miniTitle}>
							–û—Å–≤–æ–π—Ç–µ –ª—é–±–æ–π –∏–∑—É—á–∞–µ–º—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫,
							<br />
							–ø—Ä–æ–±–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∏ —É—á–µ–±–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π.
						</p>
						<button className={styles.buttonBluee} onClick={openRegistration}>
							–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ
						</button>
					</>
				)}
			</section>

			{/* –°–µ–∫—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π */}
			<section className={styles.featuresSection}>
				<div className={styles.container}>
					{loading ? (
						<FeaturesSkeleton />
					) : (
						<>
							<h2 className={styles.sectionTitle}>–ù–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h2>
							<div className={styles.featuresGrid}>
								{[
									{
										icon: 'üìö',
										title: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏',
										desc: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ –∏–∑—É—á–∞–π—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª —Å –ø–æ–º–æ—â—å—é —Ñ–ª–µ—à-–∫–∞—Ä—Ç'
									},
									{
										icon: '‚úÖ',
										title: '–ü—Ä–æ–±–Ω—ã–µ —Ç–µ—Å—Ç—ã',
										desc: '–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∑–Ω–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤'
									},
									{
										icon: 'üéØ',
										title: '–£—á–µ–±–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
										desc: '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –ª—É—á—à–µ–≥–æ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è'
									},
									{
										icon: 'üìä',
										title: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
										desc: '–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–≤–æ–∏–º–∏ —É—Å–ø–µ—Ö–∞–º–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏'
									}
								].map((feature, index) => (
									<div key={index} className={styles.featureCard}>
										<div className={styles.featureIcon}>{feature.icon}</div>
										<h3 className={styles.featureTitle}>{feature.title}</h3>
										<p className={styles.featureDesc}>{feature.desc}</p>
									</div>
								))}
							</div>
						</>
					)}
				</div>
			</section>

			{/* –°–µ–∫—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
			<section className={styles.statsSection}>
				<div className={styles.container}>
					{loading ? (
						<StatsSkeleton />
					) : (
						<div className={styles.statsGrid}>
							{[
								{ number: '10K+', label: '–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤' },
								{ number: '50K+', label: '–ö–∞—Ä—Ç–æ—á–µ–∫ —Å–æ–∑–¥–∞–Ω–æ' },
								{ number: '95%', label: '–£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤' },
								{ number: '24/7', label: '–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å' }
							].map((stat, index) => (
								<div key={index} className={styles.statItem}>
									<div className={styles.statNumber}>{stat.number}</div>
									<div className={styles.statLabel}>{stat.label}</div>
								</div>
							))}
						</div>
					)}
				</div>
			</section>

			{/* –°–µ–∫—Ü–∏—è "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç" */}
			<section className={styles.howItWorksSection}>
				<div className={styles.container}>
					{loading ? (
						<StepsSkeleton />
					) : (
						<>
							<h2 className={styles.sectionTitle}>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</h2>
							<div className={styles.stepsGrid}>
								{[
									{
										step: '1',
										title: '–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å',
										desc: '–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥'
									},
									{
										step: '2',
										title: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏',
										desc: '–î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–π —É—á–µ–±–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª'
									},
									{
										step: '3',
										title: '–ò–∑—É—á–∞–π—Ç–µ',
										desc: '–ü–æ–≤—Ç–æ—Ä—è–π—Ç–µ –∏ –∑–∞–∫—Ä–µ–ø–ª—è–π—Ç–µ –∑–Ω–∞–Ω–∏—è'
									},
									{
										step: '4',
										title: '–ü—Ä–æ–≥—Ä–µ—Å—Å–∏—Ä—É–π—Ç–µ',
										desc: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è'
									}
								].map((step, index) => (
									<div key={index} className={styles.stepCard}>
										<div className={styles.stepNumber}>{step.step}</div>
										<h3 className={styles.stepTitle}>{step.title}</h3>
										<p className={styles.stepDesc}>{step.desc}</p>
									</div>
								))}
							</div>
						</>
					)}
				</div>
			</section>
		</div>
	)
}

// Skeleton –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const HeroSkeleton = () => (
	<>
		<div className={cn(styles.skeleton, styles.skeletonTitle)}></div>
		<div className={cn(styles.skeleton, styles.skeletonMiniTitle)}></div>
		<div className={cn(styles.skeleton, styles.skeletonButton)}></div>
	</>
)

const FeaturesSkeleton = () => (
	<div className={styles.featuresSkeleton}>
		<div className={cn(styles.skeleton, styles.skeletonSectionTitle)}></div>
		<div className={styles.featuresGrid}>
			{[1, 2, 3, 4].map(item => (
				<div key={item} className={styles.featureCardSkeleton}>
					<div className={cn(styles.skeleton, styles.skeletonCircle)}></div>
					<div className={cn(styles.skeleton, styles.skeletonCardTitle)}></div>
					<div className={cn(styles.skeleton, styles.skeletonCardDesc)}></div>
					<div
						className={cn(
							styles.skeleton,
							styles.skeletonCardDesc,
							styles.short
						)}
					></div>
				</div>
			))}
		</div>
	</div>
)

const StatsSkeleton = () => (
	<div className={styles.statsGrid}>
		{[1, 2, 3, 4].map(item => (
			<div key={item} className={styles.statItemSkeleton}>
				<div className={cn(styles.skeleton, styles.skeletonStatNumber)}></div>
				<div className={cn(styles.skeleton, styles.skeletonStatLabel)}></div>
			</div>
		))}
	</div>
)

const StepsSkeleton = () => (
	<div className={styles.stepsSkeleton}>
		<div className={cn(styles.skeleton, styles.skeletonSectionTitle)}></div>
		<div className={styles.stepsGrid}>
			{[1, 2, 3, 4].map(item => (
				<div key={item} className={styles.stepCardSkeleton}>
					<div className={cn(styles.skeleton, styles.skeletonStepNumber)}></div>
					<div className={cn(styles.skeleton, styles.skeletonStepTitle)}></div>
					<div className={cn(styles.skeleton, styles.skeletonStepDesc)}></div>
				</div>
			))}
		</div>
	</div>
)

export default Home
